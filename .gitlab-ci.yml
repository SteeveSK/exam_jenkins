variables:
  KUBE_NAMESPACE_dev: dev
  KUBE_NAMESPACE_qa: qa
  KUBE_NAMESPACE_staging: staging
  KUBE_NAMESPACE_prod: prod
  KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  IP_DEV: 34.240.50.23 
  IP_QA: 34.240.50.23 
  IP_STAGING: 34.240.50.23 
  IP_PROD: 34.240.50.23 
  NODEPORT_CAST_DEV: 30000
  NODEPORT_CAST_QA: 30001
  NODEPORT_CAST_STAGING: 30002
  NODEPORT_CAST_PROD: 30003
  NODEPORT_MOVIE_DEV: 30010
  NODEPORT_MOVIE_QA: 30011
  NODEPORT_MOVIE_STAGING: 30012
  NODEPORT_MOVIE_PROD: 30013
  CI_CAST_IMAGE: steevesk/cast-service
  CI_MOVIE_IMAGE: steevesk/movie-service
  TAG_IMAGE_dev: dev
  TAG_IMAGE_prod: prod
  DOCKER_HUB_USER: steevesk
  GITHUB_USERNAME: steevesk1
  GITHUB_URL: github.com/SteeveSK/exam_jenkins.git
  SSH_URL: git@github.com:SteeveSK/exam_jenkins.git

image:
  name: "python:3.11-alpine"
  entrypoint: ["/bin/sh", "-c"]

stages:
  - test
  - build
  - run
  - push
  - deploy_dev
  - deploy_qa
  - deploy_staging
  - deploy_prod

test-yaml:
  stage: test
  image: python:latest
  script:
    - ls
    - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    - chmod 700 get_helm.sh
    - ./get_helm.sh
    - helm lint ./exam_gitlab_KOM_Steeve/helm
    - rm -rf ./get_helm.sh
  only :
    - dev

build-cast:
  stage: build
  script:
    # Build the container image gateway
    - docker build -t "$CI_CAST_IMAGE:$TAG_IMAGE_dev" ./Jenkins_devops_exams/cast-service/
    # Tag the container image from latest to the commit ref
    - docker tag "$CI_CAST_IMAGE:$TAG_IMAGE_dev" "$CI_CAST_IMAGE:$CI_COMMIT_SHORT_SHA"
  only :
    - dev

build-movie:
  stage: build
  script:
    # Build the container image orders
    - docker build -t "$CI_MOVIE_IMAGE:$TAG_IMAGE_dev" ./Jenkins_devops_exams/movie-service/
    # Tag the container image from latest to the commit ref
    - docker tag "$CI_MOVIE_IMAGE:$TAG_IMAGE_dev" "$CI_MOVIE_IMAGE:$CI_COMMIT_SHORT_SHA"
  only :
    - dev

push:
  stage: push
  before_script:
    - docker info
    # Login to the Gitlab Container registry
    - docker login -u $DOCKER_HUB_USER -p $CI_DOCKER_TOKEN 
  script:
    # Push the CAST image
    - docker push "$CI_CAST_IMAGE:$CI_COMMIT_SHORT_SHA"
    # If we are building a tag, push the `latest` container image tag too
    - if [ ! -z "$CI_COMMIT_TAG" ]; then docker push "$CI_CAST_IMAGE:latest"; fi

    # Push the MOVIE image
    - docker push "$CI_MOVIE_IMAGE:$CI_COMMIT_SHORT_SHA"
    # If we are building a tag, push the `latest` container image tag too
    - if [ ! -z "$CI_COMMIT_TAG" ]; then docker push "$CI_MOVIE_IMAGE:latest"; fi
  only :
    - dev

stop_dev:
  stage: deploy_dev
  variables:
    NAMESPACE: dev
  when: manual
  environment:
    name: dev
    action: stop
  script:
    - sudo helm uninstall helm -n $NAMESPACE
  only :
    - dev

stop_qa:
  stage: deploy_qa
  variables:
    NAMESPACE: qa
  when: manual
  environment:
    name: qa
    action: stop
  script:
    - sudo helm uninstall helm -n $NAMESPACE
  only :
    - dev

stop_staging:
  stage: deploy_staging
  variables:
    NAMESPACE: staging
  when: manual
  environment:
    name: staging
    action: stop
  script:
    - sudo helm uninstall helm -n $NAMESPACE

deploy_dev:
  # Use the official docker image.
  image: docker:latest
  environment:
    name: dev
 #   url: http://$IP_DEV:$NODEPORT_DEV
    on_stop: stop_dev
  stage: deploy_dev
  variables:
    NAMESPACE: dev
  only :
    - dev

  services:
    - docker:dind
  script:
    - rm -Rf .kube
    - mkdir .kube
    - ls
    - cat $KUBE_CONFIG > .kube/config
    - sudo -E helm upgrade --install helm exam_jenkins_KOM_Steeve/helm/ --values=exam_jenkins_KOM_Steeve/helm/values-dev.yaml -n dev


deploy_qa:
  # Use the official docker image.
  image: docker:latest
  environment:
    name: qa
   # url: http://$IP_QA:$NODEPORT_QA
    on_stop: stop_qa
  stage: deploy_qa
  variables:
    NAMESPACE: qa
  only :
    - dev    

  services:
    - docker:dind
  script:
    - rm -Rf .kube
    - mkdir .kube
    - ls
    - cat $KUBE_CONFIG > .kube/config
    - sudo -E helm upgrade --install helm ./exam_jenkins_KOM_Steeve/helm/ --values=./exam_jenkins_KOM_Steeve/helm/values-qa.yaml -n qa

merge_main_prod:
  stage: deploy_staging
  needs: ["deploy_qa"]
  script: 
    - git branch
    - git checkout main
    - ls
    - git merge origin/dev --allow-unrelated-histories
    - git push https://$GIT_USERNAME:$CI_GIT_TOKEN@$GIT_URL main

  only :
    - dev

deploy_staging:
  # Use the official docker image.
  image: docker:latest
  environment:
    name: staging
  #  url: http://$IP_STAGING:$NODEPORT_STAGING
    on_stop: stop_staging
  stage: deploy_staging
  variables:
    NAMESPACE: staging
  only :
    - main

  services:
    - docker:dind
  script:
    - cat test-prod.txt
    - rm -Rf .kube
    - mkdir .kube
    - ls
    - cat $KUBE_CONFIG > .kube/config
    - sudo -E helm upgrade --install helm ./exam_jenkins_KOM_Steeve/helm/ --values=./exam_jenkins_KOM_Steeve/helm/values-staging.yaml -n staging

deploy_prod:
  # Use the official docker image.
  image: docker:latest
  when: manual
  environment:
    name: prod
  #  url: http://$IP_PROD:$NODEPORT_PROD
  stage: deploy_prod
  variables:
    NAMESPACE: prod
  only :
    - main

  services:
    - docker:dind
  script:
    - cat test-prod.txt
    - rm -Rf .kube
    - mkdir .kube/
    - ls
    - cat $KUBE_CONFIG > .kube/config
    - sudo -E helm upgrade --install helm ./exam_jenkins_KOM_Steeve/helm/ --values=./exam_jenkins_KOM_Steeve/helm/values-prod.yaml -n prod